bids_dir: "/path/to/bids/dir"
output_dir: "/path/to/output/dir" # don't use "."

snakebids_dir: "." # DO NOT MODIFY - used to refer to files need by workflow running with CLI

debug: False # Enable printing of debug statements during parsing -- disable if generating dag visualizations

derivatives: False # Search in bids/derivatives if True; can also be path(s) to derivatives datasets

# List of analysis levels in bids app
analysis_levels: &analysis_levels
  - participant

# Mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - "all" # if "", then the first rule is run

# this configures the pybids grabber - create an entry for each type of input you want to grab
# indexed by name of input dictionary for each input is passed directly to pybids get()
# https://bids-standard.github.io/pybids/generated/bids.layout.BIDSLayout.html#bids.layout.BIDSLayout.get
pybids_inputs:
  T1w:
    filters:
      suffix: "T1w"
      extension: ".nii.gz"
      datatype: "anat"
      desc: "brain" # Require a skull-stripped brain
      part: ["mag", false]
    wildcards:
      - subject
      - session
      - run
pybids_inputs_dwi:
  dwi:
    filters:
      suffix: "dwi"
      extension: ".nii.gz"
      datatype: "dwi"
      space: "T1w"
    wildcards:
      - subject
      - session
      - run
  mask:
    filters:
      suffix: "mask"
      extension: ".nii.gz"
      datatype: "dwi"
      space: "T1w"
    wildcards:
      - subject
      - session
      - run

# Configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:
  #--- core BIDS-app options --- (do not modify below) ---#
  bids_dir:
    help: The directory with the input dataset formatted according to the
      BIDS standard.

  output_dir:
    help: The directory where the output files should be stored. If you are
      running group level analysis, this folder should be prepopulated
      with the results of the participant level analysis.

  analysis_level:
    help: Level of the analysis that will be performed
    choices: *analysis_levels

  --participant_label:
    help: The label(s) of the participant(s) that should be analyzed. The label
      corresponds to sub-<participant_label> from the BIDS spec (so it does
      not include "sub-"). If this parameter is not provided, all subjects
      will be analyzed. Multiple participants can be specified with a space
      seperated list.
    nargs: "+"

  --exclude_participant_label:
    help: The label(s) of the participant(s) that should be excluded. The label
      corresponds to sub-<participant_label> from the BIDS spec (so it does
      not include "sub-"). If this parameter is not provided, all subjects
      will be analyzed. Multiple participants can be specified with a space
      sepearated list.
    nargs: "+"
  #-----------------------------------------------------#

  #--- additional BIDS-app options --- (add in below) --#
  --slurm_tmpdir:
    help: "Flag to indicate use of SLURM temporary directory. A temporary
      directory is used to improve write speeds of output files on a
      networked system. If not used, the workflow will default to system
      /tmp directory."
    action: store_true
    default: False

  --freesurfer_dir:
    help: "The path to the freesurfer directory. If not provided, workflow
      assumes the directory exists at <output_dir>/freesurfer."
    nargs: "?"
    type: Path

  --dwi_dir:
    help: "The path to the directory containing pre-processed dwi data
      transformed to subject T1w space. If not provided, workflow assumes
      this data exists in <bids_dir>/<subject>/dwi."
    nargs: "?"
    type: Path

  --pybidsdb_dwi_dir:
    help: "The path to the pybids database associated with provided dwi_dir"
    nargs: "?"
    type: Path

  --responsemean_dir:
    help: "The path to the directory containing average response functions. If
      not provided, one will be computed from the subjects in the input
      directory."
    nargs: "?"
    type: Path

  --responsemean_ses:
    help: "The session used to compute the average response function. If
      multiple are available in the dataset, it is HIGHLY RECOMMENDED to
      set this to a specific session. If not provided, the average response
      function will be computed with all possible sessions."
    nargs: "?"

  --fs_license:
    help: "Path to Freesurfer license file. If not provided, workflow will check
      FS_LICENSE environment variable for one."
    nargs: "?"
    type: Path

  --labelmerge_base_dir:
    help: "BIDS directory containing base input labelmaps."
    nargs: "?"
    type: Path

  --labelmerge_overlay_dir:
    help: "BIDS directory containing overlay input labelmaps."
    nargs: "?"
    type: Path

  --labelmerge_base_desc:
    help: "Description entity for base labelmaps used in labelmerge. By default,
      uses ZonaBB entity as intended in the subcortical connectome workflow
      (default: ZonaBB)."
    nargs: "?"
    default: "ZonaBB"

  --labelmerge_overlay_desc:
    help: "Description entity for overlay labelmaps used in labelmerge. By
      default, uses FreesurferThal value as intended in the subcortical
      connectome workflow (default: FreesurferThal)."
    nargs: "?"
    default: "FreesurferThal"

  --labelmerge_base_drops:
    help: "Space-separated list of indices to drop from the base image used in
      labelmerge. By default, will drop the thalamus labels for intended use
      in the subcortical connectome workflow (default: 15 16)."
    nargs: "*"
    default: 15 16

  --labelmerge_overlay_drops:
    help: "Space-separated list of indices to drop from the overlay image used
      in labelmerge."
    nargs: "*"

  --labelmerge_base_exceptions:
    help: "Space-separated list of integer labels from the base labelmap to
      keep over overlay labels at corresponding voxels."
    nargs: "*"

  --labelmerge_overlay_exceptions:
    help: "Space-separated list of integer labels from the overlay labelmap to
      be overwritten by base labels at corresponding voxels."
    nargs: "*"

  --skip_labelmerge:
    help: "Skip the merging step, using only the base labelmap to identify
      structures of interest to target."
    action: store_true
    default: False

  --skip_brainstem:
    help: "By default, the worklow adds the brainstem to the combined output of
      labelmerge. Use of this flag will disable the addition of the
      brainstem label."
    action: store_true
    default: False

  --skip_thal_seg:
    help: "By default, the workflow performs segmentation of the thalamus on
      (previously processed) Freesurfer outputs. Use of this flag will skip
      the thalamus segmentation step."
    action: store_true
    default: False

  --bzero_thresh:
    help: "Set the threshold for a shell to be considered b=0. By default, this
      value is set to 10"
    nargs: "?"
    default: 10

  --shells:
    help: "(Mrtrix3) specify one or more b-values to use during processing, as
      a space-separated list of the desired approximate b-values (b-values
      are clustered to allow for small deviations). Note that some
      commands are incompatible with multiple b-values, and will report an
      error if more than one b-value is provided.
      WARNING: note that, even though b=0 volumes are never referred to as
      shells in the literature, they still have to be explicitly included
      in the list of b-values as provided to the -shell option! Several
      algorithms which include the b=0 volumes in their computations may
      otherwise return an undesired reuslt."
    nargs: "*"

  --lmax:
    help: "(Mrtrix3) the maximum spherical harmonic order for the output
      FOD(s). For algorithms with multiple outputs, this should be
      provided as a space-sperated list of integers, one for each output
      image; for single-output algorithms, only a single integer
      should be provided. If omitted, commands will use the lmax of the
      corresponding response function (i.e. based on its number of
      coefficients), up to a maximum of 8."
    nargs: "*"

  --step:
    help: "(Mrtrix3) set the step size of the algorithm in mm. Should set to
      4 steps per voxel (e.g. 1/4 * voxel size) in order to sample more
      frequently in compact region. (default: 0.35mm)"
    default: 0.35

  --sl_count:
    help: "(Mrtrix3) set the desired number of streamlines to be selected,
      after all selection criteria has been applied (i.e.
      inclusion/exclusion ROIS, min/max length, etc. Streamlines will be
      seeded until this number of streamlines have been selected, or the
      maximum allowed number of seeds has been exceeded. Set to zero to
      disable, which will result in streamlines being seeded until
      the maximum allowed number of seeds has been reached.
      (default: 20,000,000 streamlines)"
    default: 20000000

  --radial_search:
    help: "(Mrtrix3) perform a radial search from each streamline endpoint to
      locate the nearest node. Argument is the maximum radius in mm; if no
      node is found within this radius, the streamline endpoint is not
      assigned to any node. (default: 1.5mm)"
    default: 1.5
#-----------------------------------------------------#

# Workflow specific config
# Spaces available (MNI152, MNINlin2009bAsym)
Space: MNI152NLin6Asym

zona_bb_subcortex:
  tsv: "resources/zona_bb_subcortex/desc-ZonaBB_dseg.tsv"
  MNI152NLin6Asym:
    dir: "resources/zona_bb_subcortex/MNI152NLin6Asym/"
    T1w: "tpl-MNI152NLin6Asym_res-04_desc-brain_T1w.nii.gz"
    seg: "sub-SNSX32NLin2020Asym_space-MNI152NLin6Asym_desc-ZonaBB_dseg.nii.gz"
  MNI152NLin2009bAsym:
    dir: "resources/zona_bb_subcortex/MNI152NLin2009bAsym/"
    seg: "sub-SNSX32NLin2020Asym_space-MNI152NLin2009bAsym_desc-ZonaBB_dseg.nii.gz"

freesurfer:
  tsv: "resources/freesurfer/desc-FreesurferThal_dseg.tsv"

cerebellum:
  tsv: "resources/cerebellum/atl-Anatom.tsv"
  MNI152NLin6Asym:
    seg: "resources/cerebellum/MNI152NLin6Asym/atl-Anatom_space-MNI_dseg.nii"
    T1w: "resources/cerebellum/MNI152NLin6Asym/tpl-MNI152NLin6Asym_res-04_desc-brain_T1w.nii.gz"

# Containers
singularity:
  scattr: "/home/mliu366/scratch/1_in_progress/workflows/scattr_latest.sif"

fs_license: /home/mliu366/projects/def-akhanf-ab/shared/.license
